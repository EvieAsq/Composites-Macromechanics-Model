import streamlit as st
import numpy as np

st.title("Composite Laminate Property Calculator")

# --- Input: Material Properties ---
st.header("Material Properties")
E1 = st.number_input("E1 (GPa)", value=135.0) * 1e9
E2 = st.number_input("E2 (GPa)", value=10.0) * 1e9
G12 = st.number_input("G12 (GPa)", value=5.0) * 1e9
nu12 = st.number_input("Poisson’s ratio (ν12)", value=0.3)
t = st.number_input("Ply thickness (mm)", value=0.125) / 1000

# --- Input: Layup ---
st.header("Layup Configuration")
default_layup = "0, 90, -45, 45, 90, 0"
layup_input = st.text_input("Enter layup angles (comma-separated)", default_layup)
layup = [int(x.strip()) for x in layup_input.split(",")]

# --- Compute ---
nu21 = (E2 / E1) * nu12
Q11 = E1 / (1 - nu12 * nu21)
Q22 = E2 / (1 - nu12 * nu21)
Q12 = nu12 * E2 / (1 - nu12 * nu21)
Q66 = G12
Q = np.array([[Q11, Q12, 0], [Q12, Q22, 0], [0, 0, Q66]])

def transform_Q(Q, theta_deg):
    theta = np.radians(theta_deg)
    m = np.cos(theta)
    n = np.sin(theta)
    m2, n2, mn = m**2, n**2, m*n
    Q_bar = np.zeros((3, 3))
    Q_bar[0, 0] = Q11 * m2**2 + 2*(Q12 + 2*Q66)*m2*n2 + Q22*n2**2
    Q_bar[0, 1] = (Q11 + Q22 - 4*Q66)*m2*n2 + Q12*(m2**2 + n2**2)
    Q_bar[1, 1] = Q11*n2**2 + 2*(Q12 + 2*Q66)*m2*n2 + Q22*m2**2
    Q_bar[1, 0] = Q_bar[0, 1]
    Q_bar[0, 2] = (Q11 - Q12 - 2*Q66)*mn*m2 + (Q12 - Q22 + 2*Q66)*mn*n2
    Q_bar[2, 0] = Q_bar[0, 2]
    Q_bar[1, 2] = (Q11 - Q12 - 2*Q66)*mn*n2 + (Q12 - Q22 + 2*Q66)*mn*m2
    Q_bar[2, 1] = Q_bar[1, 2]
    Q_bar[2, 2] = (Q11 + Q22 - 2*Q12 - 2*Q66)*m2*n2 + Q66*(m2**2 + n2**2)
    return Q_bar

# Laminate stiffness matrix
n = len(layup)
z = np.linspace(-n*t/2, n*t/2, n+1)
A = np.zeros((3, 3))
for i in range(n):
    Qb = transform_Q(Q, layup[i])
    A += Qb * (z[i+1] - z[i])

A_inv = np.linalg.inv(A)
t_total = n * t

Ex = 1 / (A_inv[0, 0] * t_total)
Ey = 1 / (A_inv[1, 1] * t_total)
Gxy = 1 / (A_inv[2, 2] * t_total)
nu_xy = -A_inv[0, 1] / A_inv[0, 0]

# --- Output ---
st.header("Laminate Effective Properties")
st.write(f"**Ex** = {Ex/1e9:.2f} GPa")
st.write(f"**Ey** = {Ey/1e9:.2f} GPa")
st.write(f"**Gxy** = {Gxy/1e9:.2f} GPa")
st.write(f"**νxy** = {nu_xy:.3f}")

